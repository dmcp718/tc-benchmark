# TeamCache Automated Deployment Configuration
# Copy this file to .env and customize for your environment
#
# Usage: sudo python3 teamcache-auto.py --env-file .env
#
# For dry-run (preview without changes):
#   sudo python3 teamcache-auto.py --env-file .env --dry-run

# ==============================================================================
# DEPLOYMENT MODE
# ==============================================================================
# Options: docker | hybrid
# - docker: All-in-one containerized deployment (Varnish + Monitoring)
# - hybrid: Native Varnish + optional monitoring stack (recommended for production)
DEPLOYMENT_MODE=hybrid

# Enable Prometheus/Grafana monitoring stack
# Options: true | false
ENABLE_MONITORING=true

# ==============================================================================
# STORAGE CONFIGURATION
# ==============================================================================
# Storage mode: how to configure cache storage
# Options: raw_disk | filepath
# - raw_disk: Use entire block devices (/dev/sdb, /dev/sdc, etc.)
# - filepath: Use directory paths on existing mounted filesystems
STORAGE_MODE=raw_disk

# DEVICES configuration depends on STORAGE_MODE:
#
# For STORAGE_MODE=raw_disk:
#   Comma-separated list of block device paths
#   Example: DEVICES=/dev/sdb,/dev/sdc,/dev/nvme0n1
#   WARNING: These devices will be formatted - ALL DATA WILL BE ERASED
#
# For STORAGE_MODE=filepath:
#   Comma-separated list of directory paths
#   Example: DEVICES=/storage/cache/disk1,/storage/cache/disk2
#   Paths will be created if they don't exist
#   No formatting required - uses existing mounted filesystems
#
DEVICES=/dev/sdb

# Device handling mode (only applies when STORAGE_MODE=raw_disk)
# Options: format | reuse
# - format: Format devices with XFS (DESTRUCTIVE - erases all data)
# - reuse: Use existing XFS-formatted devices (preserves data)
DEVICE_MODE=format

# ==============================================================================
# NETWORK CONFIGURATION
# ==============================================================================
# Server IP address for Varnish to listen on
# This should be the IP address of the network interface you want to use
SERVER_IP=192.168.1.100

# Varnish listening port (default: 80)
VARNISH_PORT=80

# ==============================================================================
# CREDENTIALS
# ==============================================================================
# Grafana admin password (required if ENABLE_MONITORING=true)
# Choose a strong password for production deployments
GRAFANA_PASSWORD=change-me-to-secure-password

# ==============================================================================
# LICENSE FILE
# ==============================================================================
# Path to Varnish Enterprise license file
# Can be absolute or relative path
LICENSE_FILE=./varnish-enterprise.lic

# ==============================================================================
# SAFETY CONTROLS
# ==============================================================================
# Auto-confirm dangerous operations (format, overwrite)
# REQUIRED: Must be set to 'true' when DEVICE_MODE=format
# Options: true | false
AUTO_CONFIRM=false

# ==============================================================================
# NOTES
# ==============================================================================
# - All paths must be absolute or relative to the script directory
# - Device paths must be block devices (check with: lsblk)
# - Ensure license file exists before running
# - Script must be run with sudo/root privileges
# - Check logs at: /tmp/teamcache-auto-YYYYMMDD-HHMMSS.log
